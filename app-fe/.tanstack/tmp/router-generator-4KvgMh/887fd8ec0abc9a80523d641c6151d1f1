/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ListOptionsRouteImport } from './routes/list-options'
import { Route as ErrorRouteImport } from './routes/error'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OptionsIdRouteImport } from './routes/options.$id'

const ListOptionsRoute = ListOptionsRouteImport.update({
  id: '/list-options',
  path: '/list-options',
  getParentRoute: () => rootRouteImport,
} as any)
const ErrorRoute = ErrorRouteImport.update({
  id: '/error',
  path: '/error',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OptionsIdRoute = OptionsIdRouteImport.update({
  id: '/options/$id',
  path: '/options/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/error': typeof ErrorRoute
  '/list-options': typeof ListOptionsRoute
  '/options/$id': typeof OptionsIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/error': typeof ErrorRoute
  '/list-options': typeof ListOptionsRoute
  '/options/$id': typeof OptionsIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/error': typeof ErrorRoute
  '/list-options': typeof ListOptionsRoute
  '/options/$id': typeof OptionsIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/error' | '/list-options' | '/options/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/error' | '/list-options' | '/options/$id'
  id: '__root__' | '/' | '/error' | '/list-options' | '/options/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ErrorRoute: typeof ErrorRoute
  ListOptionsRoute: typeof ListOptionsRoute
  OptionsIdRoute: typeof OptionsIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/list-options': {
      id: '/list-options'
      path: '/list-options'
      fullPath: '/list-options'
      preLoaderRoute: typeof ListOptionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/error': {
      id: '/error'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/options/$id': {
      id: '/options/$id'
      path: '/options/$id'
      fullPath: '/options/$id'
      preLoaderRoute: typeof OptionsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ErrorRoute: ErrorRoute,
  ListOptionsRoute: ListOptionsRoute,
  OptionsIdRoute: OptionsIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
